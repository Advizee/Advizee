name: Build and Deploy to Plesk via FTP (ensure pnpm)

on:
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      DIST_DIR: dist

    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Setup Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'    # optional

      # Try the pnpm action first (official)
      - name: Setup pnpm (official action)
        id: pnpm-setup
        uses: pnpm/action-setup@v2
        with:
          version: 8   # set whichever major version you want; omit to get latest

      - name: Debug: show Node/pnpm info and PATH
        run: |
          echo "node -> $(node -v)"
          echo "npm  -> $(npm -v)"
          echo "yarn -> $(yarn -v || echo 'yarn not found')"
          echo "PATH: $PATH"
          echo "which pnpm: $(which pnpm || echo 'pnpm not found')"
          pnpm -v || echo "pnpm command failed or pnpm not installed"

      # If pnpm still isn't available, enable corepack or install globally
      - name: Ensure pnpm exists (corepack fallback / global install)
        if: ${{ failure() && steps['pnpm-setup'].outcome != 'success' }} # fallback only if previous pnpm action failed
        run: |
          set -e
          echo "pnpm action did not succeed — trying corepack then global install"
          if command -v corepack >/dev/null 2>&1; then
            echo "Using corepack to prepare pnpm"
            corepack enable
            corepack prepare pnpm@8 --activate || corepack prepare pnpm@latest --activate
          else
            echo "corepack not available — installing pnpm globally"
            npm install -g pnpm
          fi
          echo "which pnpm: $(which pnpm || echo 'still not found')"
          pnpm -v

      - name: Restore pnpm store cache
        uses: actions/cache@v4
        id: pnpm-cache
        with:
          path: ~/.pnpm-store
          key: pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-store-

      - name: Install dependencies (pnpm)
        run: |
          if [ -f pnpm-lock.yaml ]; then
            echo "pnpm-lock.yaml found → running frozen install"
            pnpm install --frozen-lockfile --store ~/.pnpm-store
          else
            echo "No pnpm-lock.yaml found → running pnpm install"
            pnpm install --store ~/.pnpm-store
          fi

      - name: Build (pnpm)
        run: pnpm build

      - name: Show dist contents (sanity)
        run: |
          echo "→ Dist dir listing:"
          ls -la ${{ env.DIST_DIR }}

      - name: Deploy via FTP to Plesk
        uses: SamKirkland/FTP-Deploy-Action@v4.3.6
        with:
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USER }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./${{ env.DIST_DIR }}
          server-dir: ${{ secrets.FTP_TARGET_PATH }}
